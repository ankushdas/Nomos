proc transaction transfer : (#sender : wallet), (#receiver : wallet), (amt : int) |{*}- ($d : 1) =
{
  $ls <- acquire #sender ;
  pay $ls {*} ;
  $ls.sub ;
  send $ls amt ;
  case $ls (
    sufficient => $subm <- recv $ls ;
                  get $ls {*} ;
                  #sender <- release $ls ;
                  $lr <- acquire #receiver ;
                  pay $lr {*} ;
                  $lr.add ;
                  send $lr $subm ;
                  get $lr {*} ;
                  #receiver <- release $lr ;
                  work {*} ;
                  close $d
  | insufficient => abort
  )
}

proc transaction main3 : . |{*}- ($d : 1) =
{
  let n = 1000 ;
  #s : wallet <- Nomos.MakeChannel 3 ;
  #r : wallet <- Nomos.MakeChannel 7 ;
  $c <- transfer <- #s #r n ;
  $d <- $c
}

exec main3
