proc contract storage_process : (n : int) |{*}- (#s : storage) =
{
  $ls <- accept #s ;
  case $ls (
    setter => get $ls {*} ;
              m = recv $ls ;
              #s <- detach $ls ;
              #s <- storage_process <- m
  | getter => get $ls {*} ;
              send $ls n ;
              #s <- detach $ls ;
              #s <- storage_process <- n
  )
}

proc transaction create_zero_storage : . |{*}- ($d : 1) =
{
  let n = 0 ;
  #ss : storage <- Nomos.MakeChannel 2 ;
  $ls <- acquire #ss ;
  $ls.setter ;
  pay $ls {*} ;
  send $ls 0 ;
  #ss <- release $ls ;
  #s <- storage_process <- n ;
  close $d
}

exec create_zero_storage

type storage = /\ &{setter : <{*}| int -> \/ storage,
                    getter : <{*}| int ^ \/ storage}

