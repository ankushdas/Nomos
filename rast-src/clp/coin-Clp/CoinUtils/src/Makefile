# Makefile.in generated by automake 1.9.6 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright (C) 2006 International Business Machines and others.
# All Rights Reserved.
# This file is distributed under the Eclipse Public License.

# Author:  Andreas Waechter           IBM    2006-04-13


srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/coinutils
pkglibdir = $(libdir)/coinutils
pkgincludedir = $(includedir)/coinutils
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/local/bin/ginstall -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-apple-darwin18.7.0
host_triplet = i386-apple-darwin18.7.0
subdir = src
DIST_COMMON = $(includecoin_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(srcdir)/config_coinutils.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h config_coinutils.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includecoindir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libCoinUtils_la_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1)
am_libCoinUtils_la_OBJECTS = CoinAlloc.lo CoinBuild.lo \
	CoinDenseVector.lo CoinError.lo CoinFactorization1.lo \
	CoinFactorization2.lo CoinFactorization3.lo \
	CoinFactorization4.lo CoinSimpFactorization.lo \
	CoinDenseFactorization.lo CoinOslFactorization.lo \
	CoinOslFactorization2.lo CoinOslFactorization3.lo \
	CoinFileIO.lo CoinFinite.lo CoinIndexedVector.lo CoinLpIO.lo \
	CoinMessage.lo CoinMessageHandler.lo CoinModel.lo \
	CoinStructuredModel.lo CoinModelUseful.lo CoinModelUseful2.lo \
	CoinMpsIO.lo CoinPackedMatrix.lo CoinPackedVector.lo \
	CoinPackedVectorBase.lo CoinParam.lo CoinParamUtils.lo \
	CoinPostsolveMatrix.lo CoinPrePostsolveMatrix.lo \
	CoinPresolveDoubleton.lo CoinPresolveDual.lo \
	CoinPresolveDupcol.lo CoinPresolveEmpty.lo \
	CoinPresolveFixed.lo CoinPresolveForcing.lo \
	CoinPresolveHelperFunctions.lo CoinPresolveImpliedFree.lo \
	CoinPresolveIsolated.lo CoinPresolveMatrix.lo \
	CoinPresolvePsdebug.lo CoinPresolveMonitor.lo \
	CoinPresolveSingleton.lo CoinPresolveSubst.lo \
	CoinPresolveTighten.lo CoinPresolveTripleton.lo \
	CoinPresolveUseless.lo CoinPresolveZeros.lo CoinRational.lo \
	CoinSearchTree.lo CoinShallowPackedVector.lo CoinSnapshot.lo \
	CoinWarmStartBasis.lo CoinWarmStartVector.lo \
	CoinWarmStartDual.lo CoinWarmStartPrimalDual.lo
libCoinUtils_la_OBJECTS = $(am_libCoinUtils_la_OBJECTS)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libCoinUtils_la_SOURCES)
DIST_SOURCES = $(libCoinUtils_la_SOURCES)
includecoinHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(includecoin_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ABSBUILDDIR = /Users/ankushd/Documents/Projects/Nomos/src/clp/coin-Clp/CoinUtils
ACLOCAL = ${SHELL} /Users/ankushd/Documents/Projects/Nomos/src/clp/coin-Clp/CoinUtils/missing --run aclocal-1.9
ADD_CFLAGS = 
ADD_CXXFLAGS = 
ADD_FFLAGS = 
ALWAYS_FALSE_FALSE = 
ALWAYS_FALSE_TRUE = #
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /Users/ankushd/Documents/Projects/Nomos/src/clp/coin-Clp/CoinUtils/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /Users/ankushd/Documents/Projects/Nomos/src/clp/coin-Clp/CoinUtils/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/ankushd/Documents/Projects/Nomos/src/clp/coin-Clp/CoinUtils/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/ankushd/Documents/Projects/Nomos/src/clp/coin-Clp/CoinUtils/missing --run automake-1.9
AUX_DIR = 
AWK = awk
BLAS_CFLAGS = 
BLAS_CFLAGS_INSTALLED = 
BLAS_DATA = 
BLAS_DATA_INSTALLED = 
BLAS_DEPENDENCIES = 
BLAS_LIBS = -framework Accelerate
BLAS_LIBS_INSTALLED = 
BUILDTOOLSDIR = 
CC = clang
CCDEPMODE = depmode=gcc3
CDEFS = 
CFLAGS = -O3 -pipe -DNDEBUG -Wimplicit -Wparentheses -Wsequence-point -Wreturn-type -Wcast-qual -Wall -Wno-unknown-pragmas -Wno-long-long   -DCOINUTILS_BUILD
COINUTILSLIB_CFLAGS = 
COINUTILSLIB_CFLAGS_INSTALLED = 
COINUTILSLIB_DEPENDENCIES = 
COINUTILSLIB_LIBS = -lbz2 -lz -framework Accelerate -framework Accelerate -lm 
COINUTILSLIB_LIBS_INSTALLED = -lbz2 -lz -framework Accelerate -framework Accelerate -lm 
COINUTILSLIB_PCLIBS = -lbz2 -lz -framework Accelerate -framework Accelerate -lm 
COINUTILSLIB_PCREQUIRES = 
COINUTILS_SVN_REV = 2204
COIN_CC_IS_CL_FALSE = 
COIN_CC_IS_CL_TRUE = #
COIN_CXX_IS_CL_FALSE = 
COIN_CXX_IS_CL_TRUE = #
COIN_HAS_BLAS_FALSE = #
COIN_HAS_BLAS_TRUE = 
COIN_HAS_DOXYGEN_FALSE = 
COIN_HAS_DOXYGEN_TRUE = #
COIN_HAS_GLPK_FALSE = 
COIN_HAS_GLPK_TRUE = #
COIN_HAS_LAPACK_FALSE = #
COIN_HAS_LAPACK_TRUE = 
COIN_HAS_LATEX_FALSE = #
COIN_HAS_LATEX_TRUE = 
COIN_HAS_NETLIB_FALSE = #
COIN_HAS_NETLIB_TRUE = 
COIN_HAS_PKGCONFIG_FALSE = #
COIN_HAS_PKGCONFIG_TRUE = 
COIN_HAS_SAMPLE_FALSE = #
COIN_HAS_SAMPLE_TRUE = 
COIN_HAS_ZLIB_FALSE = #
COIN_HAS_ZLIB_TRUE = 
COIN_PKG_CONFIG_PATH = /Users/ankushd/Documents/Projects/Nomos/src/clp/coin-Clp/lib64/pkgconfig:/Users/ankushd/Documents/Projects/Nomos/src/clp/coin-Clp/lib/pkgconfig:/Users/ankushd/Documents/Projects/Nomos/src/clp/coin-Clp/share/pkgconfig:
COIN_PKG_CONFIG_PATH_UNINSTALLED = /Users/ankushd/Documents/Projects/Nomos/src/clp/coin-Clp/Clp:/Users/ankushd/Documents/Projects/Nomos/src/clp/coin-Clp/Osi:/Users/ankushd/Documents/Projects/Nomos/src/clp/coin-Clp/CoinUtils:/Users/ankushd/Documents/Projects/Nomos/src/clp/coin-Clp/Data/Netlib:/Users/ankushd/Documents/Projects/Nomos/src/clp/coin-Clp/Data/Sample:
CPP = clang -E
CPPFLAGS = 
CXX = clang++
CXXCPP = clang++ -E
CXXDEFS = 
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O3 -pipe -DNDEBUG -Wparentheses -Wreturn-type -Wcast-qual -Wall -Wpointer-arith -Wwrite-strings -Wconversion -Wno-unknown-pragmas -Wno-long-long   -DCOINUTILS_BUILD
CYGPATH_W = echo
DBG_CFLAGS = -g -O0 -pipe -Wimplicit -Wparentheses -Wsequence-point -Wreturn-type -Wcast-qual -Wall -Wno-unknown-pragmas -Wno-long-long  
DBG_CXXFLAGS = -g -O0 -pipe -Wparentheses -Wreturn-type -Wcast-qual -Wall -Wpointer-arith -Wwrite-strings -Wconversion -Wno-unknown-pragmas -Wno-long-long  
DBG_FFLAGS = -g -O0 -pipe  
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DEPENDENCY_LINKING_FALSE = #
DEPENDENCY_LINKING_TRUE = 
ECHO = /bin/echo
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = gfortran
FFLAGS = -O3 -pipe  
FLIBS =  -L/usr/local/Cellar/gcc/9.2.0_1/lib/gcc/9/gcc/x86_64-apple-darwin18/9.2.0 -L/usr/local/Cellar/gcc/9.2.0_1/lib/gcc/9/gcc/x86_64-apple-darwin18/9.2.0/../../.. -lgfortran -lSystem -lquadmath -lm
GLPK_CFLAGS = 
GLPK_CFLAGS_INSTALLED = 
GLPK_DATA = 
GLPK_DATA_INSTALLED = 
GLPK_DEPENDENCIES = 
GLPK_LIBS = 
GLPK_LIBS_INSTALLED = 
HAVE_EXTERNALS_FALSE = 
HAVE_EXTERNALS_TRUE = #
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LAPACK_CFLAGS = 
LAPACK_CFLAGS_INSTALLED = 
LAPACK_DATA = 
LAPACK_DATA_INSTALLED = 
LAPACK_DEPENDENCIES = 
LAPACK_LIBS = -framework Accelerate
LAPACK_LIBS_INSTALLED = 
LDFLAGS = 
LIBEXT = a
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/../libtool
LIBTOOLM4 = 
LN_S = ln -s
LTLIBOBJS = 
LT_LDFLAGS = -no-undefined
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /Users/ankushd/Documents/Projects/Nomos/src/clp/coin-Clp/CoinUtils/missing --run makeinfo
MPICC = 
MPICXX = 
MPIF77 = 
NETLIB_CFLAGS = 
NETLIB_CFLAGS_INSTALLED = 
NETLIB_DATA = /Users/ankushd/Documents/Projects/Nomos/src/clp/coin-Clp/Data/Netlib
NETLIB_DATA_INSTALLED = 
NETLIB_DEPENDENCIES =  
NETLIB_LIBS = 
NETLIB_LIBS_INSTALLED = 
OBJEXT = o
OPT_CFLAGS = -O3 -pipe -DNDEBUG -Wimplicit -Wparentheses -Wsequence-point -Wreturn-type -Wcast-qual -Wall -Wno-unknown-pragmas -Wno-long-long  
OPT_CXXFLAGS = -O3 -pipe -DNDEBUG -Wparentheses -Wreturn-type -Wcast-qual -Wall -Wpointer-arith -Wwrite-strings -Wconversion -Wno-unknown-pragmas -Wno-long-long  
OPT_FFLAGS = -O3 -pipe  
PACKAGE = coinutils
PACKAGE_BUGREPORT = http://projects.coin-or.org/CoinUtils
PACKAGE_NAME = CoinUtils
PACKAGE_STRING = CoinUtils 2.10
PACKAGE_TARNAME = coinutils
PACKAGE_VERSION = 2.10
PATH_SEPARATOR = :
PKG_CONFIG = pkg-config
RANLIB = ranlib
RPATH_FLAGS = 
SAMPLE_CFLAGS = 
SAMPLE_CFLAGS_INSTALLED = 
SAMPLE_DATA = /Users/ankushd/Documents/Projects/Nomos/src/clp/coin-Clp/Data/Sample
SAMPLE_DATA_INSTALLED = 
SAMPLE_DEPENDENCIES =  
SAMPLE_LIBS = 
SAMPLE_LIBS_INSTALLED = 
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 2.10
VPATH_DISTCLEANFILES = 
abs_bin_dir = /Users/ankushd/Documents/Projects/Nomos/src/clp/coin-Clp/bin
abs_include_dir = /Users/ankushd/Documents/Projects/Nomos/src/clp/coin-Clp/include
abs_lib_dir = /Users/ankushd/Documents/Projects/Nomos/src/clp/coin-Clp/lib
abs_source_dir = /Users/ankushd/Documents/Projects/Nomos/src/clp/coin-Clp/CoinUtils
ac_c_preproc_warn_flag = 
ac_ct_AR = ar
ac_ct_CC = clang
ac_ct_CXX = clang++
ac_ct_F77 = gfortran
ac_ct_PKG_CONFIG = pkg-config
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
ac_cxx_preproc_warn_flag = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i386-apple-darwin18.7.0
build_alias = 
build_cpu = i386
build_os = darwin18.7.0
build_vendor = apple
coin_doxy_excludes = 
coin_doxy_logname = doxydoc/coinutils_doxy.log
coin_doxy_tagfiles = 
coin_doxy_tagname = doxydoc/coinutils_doxy.tag
coin_doxy_usedot = YES
coin_have_doxygen = no
coin_have_latex = yes
datadir = ${prefix}/share
exec_prefix = ${prefix}
have_autoconf = 
have_automake = 
have_svn = 
have_svnversion = yes
host = i386-apple-darwin18.7.0
host_alias = 
host_cpu = i386
host_os = darwin18.7.0
host_vendor = apple
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /Users/ankushd/Documents/Projects/Nomos/src/clp/coin-Clp/CoinUtils/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = $(install_sh) -d
oldincludedir = /usr/include
prefix = /Users/ankushd/Documents/Projects/Nomos/src/clp/coin-Clp
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sol_cc_compiler = 
sysconfdir = ${prefix}/etc
target_alias = 
AUTOMAKE_OPTIONS = foreign

########################################################################
#                             libCoinUtils                             #
########################################################################

# Name of the library compiled in this directory.
# We want it to be installed in the $libdir directory
lib_LTLIBRARIES = libCoinUtils.la

# List all source files for this library, including headers
libCoinUtils_la_SOURCES = \
	config_coinutils.h \
	CoinUtilsConfig.h \
	Coin_C_defines.h \
	CoinAlloc.cpp CoinAlloc.hpp \
	CoinBuild.cpp CoinBuild.hpp \
	CoinDenseVector.cpp CoinDenseVector.hpp \
	CoinDistance.hpp \
	CoinError.cpp CoinError.hpp \
	CoinFactorization.hpp \
	CoinFactorization1.cpp \
	CoinFactorization2.cpp \
	CoinFactorization3.cpp \
	CoinFactorization4.cpp \
	CoinSimpFactorization.hpp \
	CoinSimpFactorization.cpp \
	CoinDenseFactorization.hpp \
	CoinDenseFactorization.cpp \
	CoinOslFactorization.hpp \
	CoinOslFactorization.cpp \
	CoinOslFactorization2.cpp \
	CoinOslFactorization3.cpp \
	CoinOslC.h \
	CoinFileIO.cpp CoinFileIO.hpp \
	CoinFinite.cpp CoinFinite.hpp \
	CoinFloatEqual.hpp \
	CoinHelperFunctions.hpp \
	CoinIndexedVector.cpp CoinIndexedVector.hpp \
	CoinLpIO.cpp CoinLpIO.hpp \
	CoinMessage.cpp CoinMessage.hpp \
	CoinMessageHandler.cpp CoinMessageHandler.hpp \
	CoinModel.cpp CoinModel.hpp \
	CoinStructuredModel.cpp CoinStructuredModel.hpp \
	CoinModelUseful.cpp CoinModelUseful.hpp \
	CoinModelUseful2.cpp \
	CoinMpsIO.cpp CoinMpsIO.hpp \
	CoinPackedMatrix.cpp CoinPackedMatrix.hpp \
	CoinPackedVector.cpp CoinPackedVector.hpp \
	CoinPackedVectorBase.cpp CoinPackedVectorBase.hpp \
	CoinParam.cpp CoinParamUtils.cpp CoinParam.hpp \
	CoinPostsolveMatrix.cpp \
	CoinPragma.hpp \
	CoinPrePostsolveMatrix.cpp \
	CoinPresolveDoubleton.cpp CoinPresolveDoubleton.hpp \
	CoinPresolveDual.cpp CoinPresolveDual.hpp \
	CoinPresolveDupcol.cpp CoinPresolveDupcol.hpp \
	CoinPresolveEmpty.cpp CoinPresolveEmpty.hpp \
	CoinPresolveFixed.cpp CoinPresolveFixed.hpp \
	CoinPresolveForcing.cpp CoinPresolveForcing.hpp \
	CoinPresolveHelperFunctions.cpp \
	CoinPresolveImpliedFree.cpp CoinPresolveImpliedFree.hpp \
	CoinPresolveIsolated.cpp CoinPresolveIsolated.hpp \
	CoinPresolveMatrix.cpp CoinPresolveMatrix.hpp \
	CoinPresolvePsdebug.cpp CoinPresolvePsdebug.hpp \
	CoinPresolveMonitor.cpp CoinPresolveMonitor.hpp \
	CoinPresolveSingleton.cpp CoinPresolveSingleton.hpp \
	CoinPresolveSubst.cpp CoinPresolveSubst.hpp \
	CoinPresolveTighten.cpp CoinPresolveTighten.hpp \
	CoinPresolveTripleton.cpp CoinPresolveTripleton.hpp \
	CoinPresolveUseless.cpp CoinPresolveUseless.hpp \
	CoinPresolveZeros.cpp CoinPresolveZeros.hpp \
	CoinRational.cpp CoinRational.hpp \
	CoinSearchTree.cpp CoinSearchTree.hpp \
	CoinShallowPackedVector.cpp CoinShallowPackedVector.hpp \
	CoinSignal.hpp \
	CoinSmartPtr.hpp \
	CoinSnapshot.cpp CoinSnapshot.hpp \
	CoinSort.hpp \
	CoinTime.hpp \
	CoinTypes.hpp \
	CoinUtility.hpp \
	CoinWarmStart.hpp \
	CoinWarmStartBasis.cpp CoinWarmStartBasis.hpp \
	CoinWarmStartVector.cpp CoinWarmStartVector.hpp \
	CoinWarmStartDual.cpp CoinWarmStartDual.hpp \
	CoinWarmStartPrimalDual.cpp CoinWarmStartPrimalDual.hpp


# List all additionally required libraries
libCoinUtils_la_LIBADD = $(COINUTILSLIB_LIBS)

# This is for libtool
libCoinUtils_la_LDFLAGS = $(LT_LDFLAGS)

# Here list all include flags, relative to this "srcdir" directory.  This
# "cygpath" stuff is necessary to compile with native compilers on Windows
AM_CPPFLAGS = $(GLPK_CFLAGS)

# This line is necessary to allow VPATH compilation
DEFAULT_INCLUDES = -I. -I`$(CYGPATH_W) $(srcdir)`

########################################################################
#                Headers that need to be installed                     #
########################################################################

# Here list all the header files that are required by a user of the library,
# and that therefore should be installed in 'install/coin'
includecoindir = $(includedir)/coin
includecoin_HEADERS = \
	Coin_C_defines.h \
	CoinAlloc.hpp \
	CoinBuild.hpp \
	CoinDenseVector.hpp \
	CoinDistance.hpp \
	CoinError.hpp \
	CoinFactorization.hpp \
	CoinSimpFactorization.hpp \
	CoinDenseFactorization.hpp \
	CoinOslFactorization.hpp \
	CoinFileIO.hpp \
	CoinFinite.hpp \
	CoinFloatEqual.hpp \
	CoinHelperFunctions.hpp \
	CoinIndexedVector.hpp \
	CoinLpIO.hpp \
	CoinMessage.hpp \
	CoinMessageHandler.hpp \
	CoinModel.hpp \
	CoinStructuredModel.hpp \
	CoinModelUseful.hpp \
	CoinMpsIO.hpp \
	CoinPackedMatrix.hpp \
	CoinPackedVector.hpp \
	CoinPackedVectorBase.hpp \
	CoinParam.hpp \
	CoinPragma.hpp \
	CoinPresolveDoubleton.hpp \
	CoinPresolveDual.hpp \
	CoinPresolveDupcol.hpp \
	CoinPresolveEmpty.hpp \
	CoinPresolveFixed.hpp \
	CoinPresolveForcing.hpp \
	CoinPresolveImpliedFree.hpp \
	CoinPresolveIsolated.hpp \
	CoinPresolveMatrix.hpp \
	CoinPresolveMonitor.hpp \
	CoinPresolvePsdebug.hpp \
	CoinPresolveSingleton.hpp \
	CoinPresolveSubst.hpp \
	CoinPresolveTighten.hpp \
	CoinPresolveTripleton.hpp \
	CoinPresolveUseless.hpp \
	CoinPresolveZeros.hpp \
	CoinRational.hpp \
	CoinSearchTree.hpp \
	CoinShallowPackedVector.hpp \
	CoinSignal.hpp \
	CoinSmartPtr.hpp \
	CoinSnapshot.hpp \
	CoinSort.hpp \
	CoinTime.hpp \
	CoinTypes.hpp \
	CoinUtility.hpp \
	CoinWarmStart.hpp \
	CoinWarmStartBasis.hpp \
	CoinWarmStartVector.hpp \
	CoinWarmStartDual.hpp \
	CoinWarmStartPrimalDual.hpp

all: config.h config_coinutils.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(srcdir)/config.h.in: # $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

config_coinutils.h: stamp-h2
	@if test ! -f $@; then \
	  rm -f stamp-h2; \
	  $(MAKE) stamp-h2; \
	else :; fi

stamp-h2: $(srcdir)/config_coinutils.h.in $(top_builddir)/config.status
	@rm -f stamp-h2
	cd $(top_builddir) && $(SHELL) ./config.status src/config_coinutils.h

distclean-hdr:
	-rm -f config.h stamp-h1 config_coinutils.h stamp-h2
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libCoinUtils.la: $(libCoinUtils_la_OBJECTS) $(libCoinUtils_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libCoinUtils_la_LDFLAGS) $(libCoinUtils_la_OBJECTS) $(libCoinUtils_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/CoinAlloc.Plo
include ./$(DEPDIR)/CoinBuild.Plo
include ./$(DEPDIR)/CoinDenseFactorization.Plo
include ./$(DEPDIR)/CoinDenseVector.Plo
include ./$(DEPDIR)/CoinError.Plo
include ./$(DEPDIR)/CoinFactorization1.Plo
include ./$(DEPDIR)/CoinFactorization2.Plo
include ./$(DEPDIR)/CoinFactorization3.Plo
include ./$(DEPDIR)/CoinFactorization4.Plo
include ./$(DEPDIR)/CoinFileIO.Plo
include ./$(DEPDIR)/CoinFinite.Plo
include ./$(DEPDIR)/CoinIndexedVector.Plo
include ./$(DEPDIR)/CoinLpIO.Plo
include ./$(DEPDIR)/CoinMessage.Plo
include ./$(DEPDIR)/CoinMessageHandler.Plo
include ./$(DEPDIR)/CoinModel.Plo
include ./$(DEPDIR)/CoinModelUseful.Plo
include ./$(DEPDIR)/CoinModelUseful2.Plo
include ./$(DEPDIR)/CoinMpsIO.Plo
include ./$(DEPDIR)/CoinOslFactorization.Plo
include ./$(DEPDIR)/CoinOslFactorization2.Plo
include ./$(DEPDIR)/CoinOslFactorization3.Plo
include ./$(DEPDIR)/CoinPackedMatrix.Plo
include ./$(DEPDIR)/CoinPackedVector.Plo
include ./$(DEPDIR)/CoinPackedVectorBase.Plo
include ./$(DEPDIR)/CoinParam.Plo
include ./$(DEPDIR)/CoinParamUtils.Plo
include ./$(DEPDIR)/CoinPostsolveMatrix.Plo
include ./$(DEPDIR)/CoinPrePostsolveMatrix.Plo
include ./$(DEPDIR)/CoinPresolveDoubleton.Plo
include ./$(DEPDIR)/CoinPresolveDual.Plo
include ./$(DEPDIR)/CoinPresolveDupcol.Plo
include ./$(DEPDIR)/CoinPresolveEmpty.Plo
include ./$(DEPDIR)/CoinPresolveFixed.Plo
include ./$(DEPDIR)/CoinPresolveForcing.Plo
include ./$(DEPDIR)/CoinPresolveHelperFunctions.Plo
include ./$(DEPDIR)/CoinPresolveImpliedFree.Plo
include ./$(DEPDIR)/CoinPresolveIsolated.Plo
include ./$(DEPDIR)/CoinPresolveMatrix.Plo
include ./$(DEPDIR)/CoinPresolveMonitor.Plo
include ./$(DEPDIR)/CoinPresolvePsdebug.Plo
include ./$(DEPDIR)/CoinPresolveSingleton.Plo
include ./$(DEPDIR)/CoinPresolveSubst.Plo
include ./$(DEPDIR)/CoinPresolveTighten.Plo
include ./$(DEPDIR)/CoinPresolveTripleton.Plo
include ./$(DEPDIR)/CoinPresolveUseless.Plo
include ./$(DEPDIR)/CoinPresolveZeros.Plo
include ./$(DEPDIR)/CoinRational.Plo
include ./$(DEPDIR)/CoinSearchTree.Plo
include ./$(DEPDIR)/CoinShallowPackedVector.Plo
include ./$(DEPDIR)/CoinSimpFactorization.Plo
include ./$(DEPDIR)/CoinSnapshot.Plo
include ./$(DEPDIR)/CoinStructuredModel.Plo
include ./$(DEPDIR)/CoinWarmStartBasis.Plo
include ./$(DEPDIR)/CoinWarmStartDual.Plo
include ./$(DEPDIR)/CoinWarmStartPrimalDual.Plo
include ./$(DEPDIR)/CoinWarmStartVector.Plo

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-includecoinHEADERS: $(includecoin_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includecoindir)" || $(mkdir_p) "$(DESTDIR)$(includecoindir)"
	@list='$(includecoin_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(includecoinHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includecoindir)/$$f'"; \
	  $(includecoinHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includecoindir)/$$f"; \
	done

uninstall-includecoinHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(includecoin_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includecoindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includecoindir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in config_coinutils.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in config_coinutils.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in config_coinutils.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in config_coinutils.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS) config.h config_coinutils.h
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includecoindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-includecoinHEADERS

install-exec-am: install-exec-local install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includecoinHEADERS uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-local

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am \
	install-exec-local install-includecoinHEADERS install-info \
	install-info-am install-libLTLIBRARIES install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-includecoinHEADERS uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-local


#######################################################################
# Create the Config.h file that has all public defines and install it #
#######################################################################

install-exec-local:
	$(install_sh_DATA) config_coinutils.h $(DESTDIR)$(includecoindir)/CoinUtilsConfig.h

uninstall-local:
	rm -f $(DESTDIR)$(includecoindir)/CoinUtilsConfig.h
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
