type money =  <{*}| &{value : int ^ |{*}> money,
                      destroy : |{*}> 1}

type auction = /\ <{*}| +{running : money -o |{*}> \/ auction,
                          ended : +{won : lot * |{*}> \/ auction,
                                    lost : money * |{*}> \/ auction}}

type lot = 1

proc asset lot_proc : . |{*}- ($l : lot) =
{
  close $l
}

type bid_map = Map<address, money>

proc contract running_auction :
  (winner : address), (max_bid : int),
  (owner : address), ($bm : bid_map), ($l : lot) |{*}- (#a : auction) =
{
  $la <- accept #a ;
  get $la {*} ;
  $la.running ;
  $m <- recv $la ;
  pay $m {*} ;
  $m.value ;
  mv = recv $m ;
  get $m {*} ;
  pay $la {*} ;
  #a <- detach $la ;
  let addr = Nomos.GetTxnSender() ;
  $bm.insert(addr, $m) ;
  if mv > max_bid
  then
    #a <- run_or_end <- addr mv owner $bm $l
  else
    #a <- run_or_end <- winner max_bid owner $bm $l
}

proc contract run_or_end :
  (winner : address), (max_bid : int),
  (owner : address), ($bm : bid_map), ($l : lot) |{*}- (#a : auction) =
{
  if $bm.size < 2
  then
    #a <- running_auction <- winner max_bid owner $bm $l
  else
    #a <- ended_auction <- winner max_bid owner $bm $l
}

proc contract ended_auction :
  (winner : address), (max_bid : int),
  (owner : address), ($bm : bid_map), ($l : lot) |{*}- (#a : auction) =
{
  $la <- accept #a ;
  get $la {*} ;
  $la.ended ;
  let addr = Nomos.GetTxnSender() ;
  if winner == addr
  then
    $la.won ;
    send $la $l ;
    pay $la {*} ;
    #a <- detach $la ;
    $l <- lot_proc <- ;
    #a <- ended_auction <- winner max_bid owner $bm $l
  else
    $la.lost ;
    $m <- $bm.delete(addr) ;
    send $la $m ;
    pay $la {*} ;
    #a <- detach $la ;
    #a <- ended_auction <- winner max_bid owner $bm $l
}

proc transaction init_auction : . |{*}- ($d : 1) =
{
  let owner = Nomos.GetTxnSender() ;
  let max_bid = 0 ;
  $bm <- new Map<address, money> ;
  $l <- lot_proc <- ;
  #sa <- running_auction <- owner max_bid owner $bm $l ;
  close $d
}

proc asset money_proc : (n : int) |- ($m : money) =
{
  get $m {*} ;
  case $m (
    value => send $m n ;
             pay $m {*} ;
             $m <- money_proc <- n
  | destroy => pay $m {*} ;
               close $m
  )
}

exec init_auction