proc transaction transfer : (#sender : wallet), (#receiver : wallet), (amt : int) |{*}- ($d : 1) =
{
  $ls <- acquire #sender ;
  pay $ls {*} ;
  $ls.sub ;
  send $ls amt ;
  case $ls (
    sufficient => $subm <- recv $ls ;
                  get $ls {*} ;
                  #sender <- release $ls ;
                  $lr <- acquire #receiver ;
                  pay $lr {*} ;
                  $lr.add ;
                  send $lr $subm ;
                  get $lr {*} ;
                  #receiver <- release $lr ;
                  Nomos.deposit {*} ;
                  close $d
  | insufficient => abort
  )
}

proc transaction main3 : (#s : wallet), (#r : wallet) |{*}- ($d : 1) =
{
  let n = 100 ;
  print ("transfer of %d coins from %c to %c successful\n", n, #s, #r);
  $c <- transfer #s #r n ;
  $d <- $c
}

exec main3 #ch3 #ch7
