type A = 1

type stackA = p&{ ins{0.5} : A -o stackA,
                  del{0.5} : +{none : 1,
                               some : A * stackAi}}

type stackAi = p&{ins{1.0} : A -o stackAi,
                  del{0.0} : +{none : 1,
                               some : A * stackAi}}

proc asset empty : . |- ($s : stackAi) =
{
  pcase $s (
    ins => $x <- recv $s ;
           $e <- empty <- ;
           $s <- elem <- $x $e
  | del => $s.none ;
           close $s
  )
}

proc asset elem : ($x : A), ($t : stackAi) |- ($s : stackAi) =
{
  pcase $s (
    ins => $y <- recv $s ;
           $t..ins ;
           send $t $y ;
           $s <- elem <- $x $t
  | del => $s.some ;
           send $s $x ;
           $s <- $t
  )
}