type A = 1

type stackAi{p} = p&{ins{p} : <{*}| A -o stackAi,
                  del{1-p} : <{*}| +{none : 1,
                                     some : A * stackAi}}

proc asset empty : . |{*}- ($s : stackAi) =
{
  pcase $s (
    ins => get $s {*} ;
           $x <- recv $s ;
           $e <- empty <- ;
           work {*} ;
           $s <- elem <- $x $e
  | del => get $s {*} ;
           $s.none ;
           work {*} ;
           close $s
  )
}

proc asset elem : ($x : A), ($t : stackAi{(1+p)/2}) |{*}- ($s : stackAi{p}) =
{
  pcase $s (
    ins => get $s {*} ;
           $y <- recv $s ;
           $t..ins ;
           pay $t {*} ;
           send $t $y ;
           work {*} ;
           $s <- elem <- $x $t
  | del => get $s {*} ;
           $s.some ;
           send $s $x ;
           work {*} ;
           $s <- $t
  )
}