#test success

type A = 1

type stack = &{ins : A -o stack,
               del : +{none : 1,
                       some : A * stack}}

proc empty : . |- (s : stack) =
  case s (
    ins =>
      x <- recv s ;
      e <- empty <- ;
      s <- elem <- x e
  | del =>
      s.none ;
      close s
  )

proc elem : (x : A), (t : stack) |- (s : stack) =
  case s (
    ins =>
      y <- recv s ;
      t' <- elem <- x t ;
      s <- elem <- y t'
  | del =>
      s.some ;
      send s x ;
      s <- t
  )