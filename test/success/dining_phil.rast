#test success

type lfork = \/ sfork

type sfork = /\ lfork

type phil = 1

proc contract fork_proc : . |- (c : sfork) =
  lc <- accept c ;
  c <- detach lc ;
  c <- fork_proc <-

proc transaction thinking : (left : sfork), (right : sfork) |- (c : phil) =
  lleft <- acquire left ;
  lright <- acquire right ;
  c <- eating <- lleft lright

proc transaction eating : (lleft : lfork), (lright : lfork) |- (c : phil) =
  right <- release lright ;
  left <- release lleft ;
  c <- thinking <- left right

proc asset main : . |- (d : 1) =
  f1 <- fork_proc <- ;
  f2 <- fork_proc <- ;
  f3 <- fork_proc <- ;
  p1 <- thinking <- f1 f1 ;
  p2 <- thinking <- f2 f1 ;
  p3 <- thinking <- f3 f1 ;
  wait p1 ;
  wait p2 ;
  wait p3 ;
  close d

exec main